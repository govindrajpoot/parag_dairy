paths:
  /api/auth/signup:
    post:
      summary: Register a new user
      tags: [Authentication]
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
                - password
                - role
              properties:
                name:
                  type: string
                  description: User's full name
                email:
                  type: string
                  format: email
                  description: User's email address
                password:
                  type: string
                  minLength: 6
                  description: User's password
                role:
                  type: string
                  enum: [Admin, Distributor, User]
                  description: User's role
      responses:
        '201':
          description: User created successfully
        '400':
          description: Validation error
        '401':
          description: Unauthorized
        '500':
          description: Server error

  /api/auth/create-user:
    post:
      summary: Create a new user (by Admin or Distributor)
      tags: [Authentication]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
                - password
                - role
              properties:
                name:
                  type: string
                  description: User's full name
                email:
                  type: string
                  format: email
                  description: User's email address
                password:
                  type: string
                  minLength: 6
                  description: User's password
                role:
                  type: string
                  enum: [Distributor, Sub-Admin]
                  description: Role of the user to create
      responses:
        '201':
          description: User created successfully
        '400':
          description: Validation error
        '401':
          description: Unauthorized
        '403':
          description: Forbidden - insufficient permissions
        '500':
          description: Server error

  /api/auth/signin:
    post:
      summary: Authenticate user and get token
      tags: [Authentication]
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                      user:
                        type: object
        '400':
          description: Invalid credentials
        '500':
          description: Server error

  /api/auth/users:
    get:
      summary: Get all users (Admin only)
      tags: [Authentication]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Users retrieved successfully
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Server error

  /api/auth/reset-password:
    post:
      summary: Reset user password
      tags: [Authentication]
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  format: email
      responses:
        '200':
          description: Password reset email sent
        '400':
          description: Invalid email
        '500':
          description: Server error
